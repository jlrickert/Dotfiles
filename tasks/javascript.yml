---
- name: Get bash shell location
  command: which bash
  changed_when: no
  failed_when: bash_path_res.rc != 0
  register: bash_path_res

- name: Fetch nvm tag information
  uri:
      url: https://api.github.com/repos/nvm-sh/nvm/tags
      headers:
          Accept: "application/vnd.github.v3+json"
      return_content: yes
  register: nvm_repo_tag_res

- name: "Query nvm tag information for latest version"
  set_fact:
      nodejs_nvm_version: "{{ nvm_repo_tag_res.json | map(attribute='name') | list | first }}"

- name: Install nvm
  become: yes
  git:
      repo: https://github.com/nvm-sh/nvm.git
      dest: "{{ ansible_env.NVM_DIR|default('~/.nvm') }}"
      version: "{{ nodejs_nvm_version }}"

- name: install most stable node version
  become: yes
  changed_when: no
  shell:
      cmd: "source {{ ansible_env.NVM_DIR|default('~/.nvm') }}/nvm.sh && nvm install stable"
      executable: "{{ bash_path_res.stdout }}"

- name: Check if deno is installed.
  shell:
      cmd: "which deno"
  failed_when: false
  changed_when: false
  register: deno_exists

- name: Install curl
  apt:
      name: curl
      state: present

- name: Copy deno install script file
  copy:
      src: deno-install.sh
      dest: "/home/{{ ansible_user }}/"
      mode: "0755"
  when: deno_exists.rc == 1

- name: Install deno
  shell: "/home/{{ ansible_user }}/deno-install.sh"
  when: deno_exists.rc == 1

- name: Remove deno install script
  file:
      path: "/home/{{ ansible_user }}/deno-install.sh"
      state: absent
  when: deno_exists.rc == 1
