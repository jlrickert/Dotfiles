#!/usr/bin/env bash

set -o errexit  # exit if non-zero status code is returned
set -o nounset  # exit if undefined variable is used
set -o pipefail # exit if no-zero status code is returned in a pipeline
IFS=$'\n\t'

# {{ if not (and .is_arch .setup_flutter) }}
# exit 0
# {{ end}}

declare NOCOLOR=
[[ -t 1 ]] || NOCOLOR=y
declare GOLD=$'\033[38;2;184;138;0m'
declare RED=$'\033[38;2;255;0;0m'
declare GREY=$'\033[38;2;100;100;100m'
declare CYAN=$'\033[38;2;0;255;255m'
declare GREEN=$'\033[38;2;0;255;0m'
declare RESET=$'\033[0m'

if [[ -n "$NOCOLOR" ]] ; then
  GOLD=
  RED=
  GREY=
  CYAN=
  GREEN=
  RESET=
fi

_log() {
    local MSG="$1"
    shift
    echo "${GREEN}${MSG}:${RESET} $@"
    "$@"
}

_sudo() {
    if [[ "$(whoami)" = "root" ]]; then
        "$@"
    else
        sudo "$@"
    fi
}

_source_if() { [[ -r "$1" ]] && source "$1"; }
_have() { command -v "$1" &>/dev/null; }

_log "Sourcing environment" source ~/.zshenv

# if _have flutter; then
#     _log "Flutter found (Skipping)"
#     exit 0
# fi

_log "Installing flutter"

_log "Install flutter" yay --sync --refresh --needed android-file-transfer android-sdk android-studio android-tools android-udev android-sdk-cmdline-tools-latest android-sdk-build-tools android-sdk-platform-tools android-platform clang cmake dart flutter jdk-openjdk ninja
_log "Create an android dev group" _sudo groupadd android-sdk
_log "Create an fluterusers dev group" _sudo groupadd flutterusers
_log "Allow ${USER} android access" _sudo gpasswd -a "${USER}" android-sdk
_log "Allow ${USER} flutter access" _sudo gpasswd -a "${USER}" flutterusers
_log "Allow users to execute android binaries" _sudo setfacl -R -m g:android-sdk:rwx /opt/android-sdk
_log "Allow users to execute binaries by default" _sudo setfacl -d -m g:android-sdk:rwx /opt/android-sdk
